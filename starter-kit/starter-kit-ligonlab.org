* Other starter kit bits to load for basic LigonLab use
  Here indicate starter-kits to load by default.
  #+begin_src emacs-lisp
  (starter-kit-load "python") ;; Breaks w/emacs24?; see http://python.6.n6.nabble.com/problem-with-byte-code-td2012559.html for possible work-around
  (starter-kit-load "org")
  #+end_src

* Source block execution
   #+begin_src emacs-lisp :tangle yes                                  
   (org-babel-do-load-languages                                        
    (quote org-babel-load-languages)                                   
    (quote ((emacs-lisp . t)                                           
            (python . t)                                               
            (shell . t) ; If an error, trying commenting this line...  
            ;(sh . t)   ; ...and uncommenting this one.                
            (org . t)                                                  
            (dot . nil)                                                
            (ditaa . nil)                                              
            (R . nil)                                                  
            (ipython . nil)                                            
            (octave . nil)                                             
            (gnuplot . nil)                                            
            (ledger . nil)                                             
            (asymptote . nil)                                          
            (latex . nil))))                                           
   #+end_src                                                           

   You'll probably want to execute the following, but consider that
   this may create a security issue.
   #+begin_src emacs-lisp :tangle yes
   ; Do not prompt to confirm evaluation
   ; This may be dangerous - make sure you understand the consequences
   ; of setting this -- see the docstring for details
   (setq org-confirm-babel-evaluate nil)
   #+end_src

* ELPA Package Archives
 #+BEGIN_SRC emacs-lisp :tangle yes
 (add-to-list 'package-archives '("marmalade" . "https://marmalade-repo.org/packages/") t)
 (add-to-list 'package-archives
              '("melpa-stable" . "https://stable.melpa.org/packages/") t)
 (add-to-list 'package-archives '("org" . "http://orgmode.org/elpa/") t) ; Org-mode's
 #+END_SRC

* Further mussing with =el-get=
The following uses the =el-get= mechanism to initialize a set of
recipes, and then to install a series of packages (=buffer-move=, =magit=
#+BEGIN_SRC emacs-lisp
(require 'el-get-elpa)
(el-get-elpa-build-local-recipes)

(setq
 el-get-sources
 '((:name buffer-move			; have to add your own keys
	  :after (progn
		   (global-set-key (kbd "<C-S-up>")     'buf-move-up)
		   (global-set-key (kbd "<C-S-down>")   'buf-move-down)
		   (global-set-key (kbd "<C-S-left>")   'buf-move-left)
		   (global-set-key (kbd "<C-S-right>")  'buf-move-right)))))

;   (:name magit				; git meet emacs, and a binding
;	  :type elpa
;          :before (global-set-key (kbd "C-x g") magit-status)
;	  :depends (dash emacs-async ghub let-alist magit-popup with-editor async))))

(setq
 my:el-get-packages
 '(el-get				; el-get is self-hosting
   switch-window			; takes over C-x o
   magit
   elpy
   auto-complete			; complete as you type with overlays
   yasnippet 				; powerful snippet mode
   ;zencoding-mode			; http://www.emacswiki.org/emacs/ZenCoding
   color-theme		                ; nice looking emacs
   color-theme-tango))	                ; check out color-theme-solarized

(setq my:el-get-packages
      (append
       my:el-get-packages
       (loop for src in el-get-sources collect (el-get-source-name src))))

;; install new packages and init already installed packages
(el-get 'sync my:el-get-packages)

#+END_SRC
* Magit-status global key
#+BEGIN_SRC emacs-lisp
(require 'magit)
(global-set-key (kbd "C-x g") 'magit-status)
#+END_SRC
* Fix for problem with exec-path on MacOS
  Emacs on MacOS has an issue in setting the path it searches for
  executables correctly.  Here's an emacs module that purports to
  solve that problem.
#+BEGIN_SRC emacs-lisp
(el-get-bundle elpa:exec-path-from-shell
  (when (memq window-system '(mac ns x))
    (exec-path-from-shell-initialize)))
#+END_SRC

#+RESULTS:

* Install org-contrib
  Note that this should come /after/ setup of [[*ELPA Package Archives][ELPA Package Archives]]
#+BEGIN_SRC emacs-lisp
(el-get-bundle elpa:org-plus-contrib)
#+END_SRC
* Some =org-mode= additions
** Use inline tasks
#+begin_src emacs-lisp
(require 'org-inlinetask)
#+end_src
** Setup org-drawers
#+begin_src emacs-lisp
(setq org-drawers (quote ("PROPERTIES" "LOGBOOK" "SETUP")))
#+end_src
